unit Form;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, System.ImageList,
  Vcl.ImgList, UCHelicoptero;

type


  TForm1 = class(TForm)
    TimerHelicoptero: TTimer;
    Helicoptero: TImageList;       //TPNGImage
    procedure FormCreate(Sender: TObject);
    procedure FormPaint(Sender: TObject);
    procedure TimerHelicopteroTimer(Sender: TObject);
    procedure FormKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);

  private
    { Private declarations }
  public
    { Public declarations }
    procedure HelicopterAnimacion;
  end;

var
  Form1: TForm1;
  imgH:integer;
  objHelicoptero : Helicoptero;

implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
begin
  Form1.Width := Screen.Width;
  imgH := 0;
  objHelicoptero := objHelicoptero.crear;
//  Helicoptero.Add()
end;

procedure TForm1.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  objHelicoptero.moverse(key);
end;

procedure TForm1.FormKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  objHelicoptero.Nomoverse(key);
end;

procedure TForm1.FormPaint(Sender: TObject);
begin
//  objHelicoptero.dibujar(canvas);
end;

procedure TForm1.HelicopterAnimacion;
begin
//   Repaint;
//  imgh := (imgh+1) mod 3;
//  //movimiento
//  if (Direccion.izquierda)and(x > 0) then
//    dec(x);
//  if (Direccion.derecha) then
//    inc(x);
//  if (Direccion.superior) and (y > 0) then
//    dec(y);
//  if (Direccion.inferior) then  inc(y);
end;

procedure TForm1.TimerHelicopteroTimer(Sender: TObject);
begin
 HelicopterAnimacion;
end;

end.
